<% include template/header.ejs %>

		<canvas id="cvs" height="1000" width="1204">抱歉，您的瀏覽器不支持canvas</canvas>
		<script>
			var socket = io.connect('http://localhost');

				var list = ["","Ⅰ","Ⅱ","Ⅲ","Ⅳ","Ⅴ","Ⅵ","Ⅶ","Ⅷ","Ⅸ","Ⅹ"];
				let XYlenght=10, //位置
					nowX=0,nowY=102; //陣列畫到的位置(nowY初始位置是第二排)
				var	distance=20, //兩隔間的距離
					size=82, //每格的大小
					listNum=1,
					listNumE=1;
				var lastLenght=0;
				var clearX=new Array(),
					clearY=new Array();
				var cvs=document.getElementById("cvs");     
				var ctx=cvs.getContext("2d");
				ctx.fillStyle="black";
				ctx.width = ctx.width;
				for (var locationX = 0; locationX < XYlenght; locationX++) {	//走訪x
					for (var locationY = 0; locationY < XYlenght; locationY++) {	//走訪y
						if(locationX==0){	//第一排座標
							ctx.font = "normal 30px Arial";
							ctx.fillText(list[listNum],nowY-61,nowX+50);
							listNum++; } 
						if(locationX==9){	//最後一排座標
							ctx.font = "normal 30px Arial";
							ctx.fillText(list[listNumE],nowY+100,nowX+50);
							listNumE++;	} 
						ctx.strokeRect(nowY,nowX,size,size);
						nowX+=distance;
						nowX+=size;
					}
					nowY+=distance;
					nowY+=size;
					nowX=0;
				}
				ctx.font = "normal 20px Arial";	//設定id顯示的大小
			

			function Direction(now_X,now_Y,next_X,next_Y){	//判斷左右上下
				if (now_X>next_X) {return 'left'; }
				if (now_X<next_X) {return 'right'; }
				if (now_Y>next_Y) {return 'upper'; }
				if (now_Y<next_Y) {return 'under'; }
			}

			function drawArrow(ctx, fromX, fromY, toX, toY,theta,headlen,width,color) {	//畫出箭頭

			    theta = typeof(theta) != 'undefined' ? theta : 30;
			    headlen = typeof(theta) != 'undefined' ? headlen : 10;
			    width = typeof(width) != 'undefined' ? width : 1;
			    color = typeof(color) != 'color' ? color : '#000';
			    var angle = Math.atan2(fromY - toY, fromX - toX) * 180 / Math.PI,
			        angle1 = (angle + theta) * Math.PI / 180,
			        angle2 = (angle - theta) * Math.PI / 180,
			        topX = headlen * Math.cos(angle1),
			        topY = headlen * Math.sin(angle1),
			        botX = headlen * Math.cos(angle2),
			        botY = headlen * Math.sin(angle2);

			    ctx.save();
			    ctx.beginPath();

			    var arrowX = fromX - topX,
			        arrowY = fromY - topY;

			    ctx.moveTo(arrowX, arrowY);
			    ctx.moveTo(fromX, fromY);
			    ctx.lineTo(toX, toY);
			    arrowX = toX + topX;
			    arrowY = toY + topY;
			    ctx.moveTo(arrowX, arrowY);
			    ctx.lineTo(toX, toY);
			    arrowX = toX + botX;
			    arrowY = toY + botY;
			    ctx.lineTo(arrowX, arrowY);
			    ctx.strokeStyle = color;
			    ctx.lineWidth = width;
			    ctx.stroke();
			    ctx.restore();
			}

			function Arrow(ctx,nowX,nowY,now_X,now_Y,next_X,next_Y){	//根據上下左右對應到function
				switch(Direction(now_X,now_Y,next_X,next_Y)){
					case 'left':
						drawArrow(ctx, nowY+70 ,nowX+41, nowY+10, nowX+41,30,30,5,'#fff');
						break;   

					case 'right':
						drawArrow(ctx, nowY+10, nowX+41, nowY+70 ,nowX+41,30,30,5,'#fff');
						break;

					case 'upper':
						drawArrow(ctx, nowY+41 ,nowX+70, nowY+41, nowX+10,30,30,5,'#fff');
						break;

					case 'under':
						drawArrow(ctx, nowY+41, nowX+10, nowY+41 ,nowX+70,30,30,5,'#fff');
						break;
				}
			}

			$(document).ready(function(){
				socket.on('draw',function(data){
///////			
					let XYlenght=10, //位置
						nowX=0,nowY=102; //陣列畫到的位置(nowY初始位置是第二排)
					var now = data.point;
					var next = data.nextPoint;
					for(lastLenght;lastLenght>=0;lastLenght--){
						ctx.clearRect(clearY[lastLenght], clearX[lastLenght], size, size);
					}
					for (var locationX = 0; locationX < XYlenght; locationX++) {	//走訪x
						for (var locationY = 0; locationY < XYlenght; locationY++) {	//走訪y
							for (var data = 0; data < now.length; data++) {	//走訪現在位置的data
								if (locationX==now[data].x && locationY==now[data].y) {	//位置 vs data
									ctx.fillRect(nowY,nowX,size,size);
									clearY[data]=nowY;//儲存此次的
									clearX[data]=nowX;
									Arrow(ctx,nowX,nowY,now[data].x,now[data].y,next[data].x,next[data].y);
									ctx.fillStyle="white";
									ctx.fillText(now[data].id,nowY+65,nowX+70);	//顯示的文字和位置
									ctx.fillStyle="black";
								} else {
									ctx.strokeRect(nowY,nowX,size,size);
								}
							}
							nowX+=distance;
							nowX+=size;
						}
						nowY+=distance;
						nowY+=size;
						nowX=0;
					}
					lastLenght=now.length;
////////
				});
			});
		</script>
	</body>
</html>