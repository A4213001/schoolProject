<!DOCTYPE html>
<html lang="en">
<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.8.0/jquery.min.js"></script>
<script>
	function sleep(d){
	  for(var t = Date.now(); Date.now() - t <= d;);
	}

	var go_x_size = 4, go_y_size = 4;

	function getQueryVariable(variable)
	{
	    var query = window.location.search.substring(1);
	    var vars = query.split("&");
	    for (var i=0;i<vars.length;i++) {
	            var pair = vars[i].split("=");
	            if(pair[0] == variable){return pair[1];}
        }
	    return(false);
	}
</script>
<head>
    <meta charset="UTF-8">
    <title>robot</title>
    <style>
    </style>
    <script src="/socket.io/socket.io.js"></script><!--webSocket-->
	<script>
		var socket = io.connect('http://localhost');//webSocket
		var id = parseInt(getQueryVariable("id"));
		var now_x = 0;//初始位置x = 0
        var now_y = Math.floor(Math.random() * 10);//初始位置y = 0~9隨機一個
		var goto_x = 0;//目標位置x
		var goto_y = 0;//目標位置y
		var auto = false;//是否開始自動測試模式
		var index = null;//robot於server中的index
		var previous_x = null;//前一個位置x
		var previous_y = null;//前一個位置y
		var mapLength = 10;//場地大小為10*10
		var stop_signal = true;//停止訊號
		var route_point = new Array();//路徑
		var now_step = 0;//接收到路徑後已走步數
		if(!id){
			id = 0;
		}
	</script>
</head>
<body>
	<h1 align="center">
		id = 
		<script>
			document.write(id);
		</script>
	</h1>
	<p align="center">
	    <label>now_x</label>
	    <input type="number" id="now_x">
	    <label>now_y</label>
	    <input type="number" id="now_y">
	    <br>
	    <label>goto_x</label>
	    <input type="number" id="goto_x">
	    <label>goto_y</label>
	    <input type="number" id="goto_y">
	    <br>
	    <button onclick="start()">開始</button>
	    <button onclick="autoStart()">自動模式</button>
	    <button onclick="running()">發動</button>
	</p>
	<div id="goto"></div>
    <script>
    	function running(){
		    setInterval(function(){
		    	if(!stop_signal){
			    	previous_x = now_x;
			  		previous_y = now_y;
			  		if(route_point.x.length > 0 && route_point.y.length > 0){
			  			if(now_x == route_point.x[0] && now_y == route_point.y[0]){
			  				route_point.x.shift();
			  				route_point.y.shift();
			  			}
			  			if(route_point.x.length > 0 && route_point.y.length > 0){
			    			now_x = route_point.x.shift();
						  	now_y = route_point.y.shift();
					    }
				  	}
				  	setAddress();
			  	}
			  	if(now_x != goto_x || now_y != goto_y){
			  		socket.emit('walk',
				  		{
				  			id : id,
				  			index : index,
				  			isStop : false
				  		}
			  		);
			  	} else {
			  		if(auto){
			  			autoStart();
			  		}
			  	}
		    }, 1000);
    	}

	    function setAddress(){
	        socket.emit('setAddress',
	        	{
	        		id : id,
	        	 	index : index,
	        		now_x : now_x,
	        	 	now_y : now_y,
	        	 	previous_x : previous_x,
	        	 	previous_y : previous_y
	        	}
	        );
	    };

	    function start(){
	    	auto = false;
	    	now_x = parseInt($("#now_x").val());
	    	now_y = parseInt($("#now_y").val());
	    	goto_x = parseInt($("#goto_x").val());
	    	goto_y = parseInt($("#goto_y").val());
		    socket.emit('start',
		    	{
		    		id : id,
		    		now_x : now_x,
		    		now_y : now_y,
		    		goto_x : goto_x,
		    		goto_y : goto_y
		    	}
		    );
        };

        function autoStart(){
        	auto = true;
        	if(now_x == 0){
        		goto_x = mapLength - 1;
        		goto_y = Math.floor(Math.random() * 10);
        	}
        	else if(now_x == mapLength - 1){
        		goto_x = 0;
        		goto_y = Math.floor(Math.random() * 10);
        	}
        	else{
        		goto_x = 0;
        		goto_y = 0;
        		console.log("!!!!!!!!!!!! : " + now_x);
        	}
        	socket.emit('start',
	        	{
	        		id : id,
		    		now_x : now_x,
		    		now_y : now_y,
		    		goto_x : goto_x,
		    		goto_y : goto_y
	        	}
	        );
	        $("#goto").html("<b>goto_x : " + goto_x + " goto_y : " + goto_y);
	        // sleep(1000);。
        };

		socket.on('return_index', function (data) {
        	index = data.index;   
		});

		socket.on('stop', function (data) {
			stop_signal = true;
     //    	sleep(1000);
     //    	socket.emit('walk',
		  	// 	{
		  	// 		id : id,
		  	// 		index : index,
		  	// 		isStop : true
		  	// 	}
	  		// );
		});
		socket.on('go', function (data) {
			if(Math.floor(Math.random() * 10) < 3){
				t1 = Date.now();
				setTimeout(function(){
					route_point = {
				  		x : data.x,
				  		y : data.y
				  	};
				  	stop_signal = false;
				  	console.log(route_point);
					console.log(t1 + "delay");
			    }, 500);
			} else {
			    route_point = {
			  		x : data.x,
			  		y : data.y
			  	};
			  	stop_signal = false;
			  	console.log(route_point);
			  	t = Date.now();
				console.log(t);
			}
		});  
	</script>
</body>
</html>